{"title":"drill-hive","zzzContent":"# Hive 插件\n\nDrill 1.1 及后续的版本支持Hive 1.0;要使用Hive的自定义SerDes或是输入格式、输出格式来访问Hive 的表，所有的Drill节点必须在Drill安装目录的jars/3rdparty 目录下放上Hive的SerDes或是输入格式，输出格式的Jar包。\n\n你可以通过选择WEB办控制台里的\"Storage\" tab来更新Hive配置。从禁用的手件列表里， 点击\"hive\"后面的\"Update\"按钮。Hive默认的插件的配置应当像下面这样：\n\n```\n{\n      \"type\": \"hive\",\n      \"enabled\": false,\n      \"configProps\": {\n        \"hive.metastore.uris\": \"\",\n        \"javax.jdo.option.ConnectionURL\": \"jdbc:derby:;databaseName=../sample-data/drill_hive_db;create=true\",\n        \"hive.metastore.warehouse.dir\": \"/tmp/drill_hive_wh\",\n        \"fs.default.name\": \"file:///\",\n        \"hive.metastore.sasl.enabled\": \"false\"\n      }\n    }\n\n```\n\n## Drill连接到Hive的远程元数据\n\n  Hive的元数据是在Hive之外做为一个独立服务存的的。Drill可以能冠军Thrift来访问元数据。元数据和Hive数据库是通过JDBC来交互的。\n\n  按照这一章后面的步骤来将Drill指向到Hive的元数据服务的地址。在Hive 插件的配置中，设定Connection参数，来给Drill提供一个connection。在这里，如果你并不是通过HBaseStorageHandler来查询Hive 表的，你就已经完成配置了；如果你通过HBaseStorageHandler来查询Hive表，你需要配置Zookeeper quorum 和port这两个属性，因为HBaseStorageHandler需要这两个参数。Drill也使用这些参数来发现HBase 服务。如果你使用HBase 插件，请在Hive插插和HBase 插件里使用相同的Zookeeper quorum 和port 参数（如果你想要Hive 查询访问和HBase一样的源的话）。\n\n\n**注意，请确认你在注册Hive的元数据的时候，Hive元数据服务已经跑起来了。**\n\n### Hive 远程元数据配置\n\n要连接Drill到一个Hive 远程元数据：\n\n1. 在hive.metastore.uris配置项里指定的系统上执行这个命令:\n\n_hive --service metastore_\n\n2. 在Drill的Web控制台上，点选 \"Storage\" 标签页。\n\n3. 在Drill的web控制台上的禁用插件列表区域，点击\"hive\"后面的“Update\"按钮。\n\n4. 在配置窗，添加Thrift URI和port选项到 hive.metastore.uris;例如:\n\n```\n...\n     \"configProps\": {\n     \"hive.metastore.uris\": \"thrift://<host>:<port>\",\n  ...\n```\n\n5. 修改文件的默认位置以跟您的环境匹配。比如，将\"fs.default.name\"从”file:///\"修改到”hdfs://\"或是\"hdfs://<hostname>:<port>\".包含了host和port设置的\"fs.default.name\"必须指向主控节点。如下例所示:\n\n```\n {\n    \"type\": \"hive\",\n    \"enabled\": false,\n    \"configProps\": {\n    \"hive.metastore.uris\": \"thrift://hdfs41:9083\",\n    \"hive.metastore.sasl.enabled\": \"false\",\n    \"fs.default.name\": \"hdfs://10.10.10.41/\"\n    }\n }\n```\n\n6. 如果并不通过HBaseStorageHandler来查询Hive,忽略这一步；否则，添加 ZooKeeper quorum hosts 的名字和端口（比如2181）到配置中。\n\n```\n{\n  \"type\": \"hive\",\n  \"enabled\": false,\n  \"configProps\": {\n  .\n  .\n  .\n    \"hbase.zookeeper.quorum\": \"zkhost1,zkhost2,zkhost3\",\n    \"hbase.zookeeper.property.clientPort:\" \"2181\"\n  }\n}\n\n```\n7. 点击\"enable\"按钮。\n\n\n## Drill连接到Hive的嵌入式元数据\nHive的元数据配置，是嵌入在Drill进程里面。配置一个嵌入式的元数据的配置，只能用于一个集群，只运行了一台Drillbit的情况，并且只能用于测试目的。不要在生产环境下使用嵌入模式。\n\n要在Drill的Web控制台里提供元数据的配置。在你配置一个嵌入式的元数据时，请确保您已经将用来连接到Hive 元数据的驱动放到了Drill的classpath下（/<drill installation directory>/lib/）。如果驱动不在这里，请拷一份过去。\n\n\n### Drill嵌入式元数据的配置\n\n要配置一个嵌入式的元数据配置，你需要:\n\n1. 在Drill 的Web控制台上，点击\"Storage\"标签页。\n2. 在Drill 的禁用插件列表区域，点击\"hive\"后面的\"Update\"按钮。\n3. 在配置窗，添加数据库配置：\n\n```\n{\n  \"type\": \"hive\",\n  \"enabled\": false,\n  \"configProps\": {\n    \"hive.metastore.uris\": \"\",\n    \"javax.jdo.option.ConnectionURL\": \"jdbc:<database>://<host:port>/<metastore database>\",\n    \"hive.metastore.warehouse.dir\": \"/tmp/drill_hive_wh\",\n    \"fs.default.name\": \"file:///\",\n    \"hive.metastore.sasl.enabled\": \"false\"\n  }\n}\n```\n\n将\"fs.default.name\" 属性修改，以指定文件的默认位置 。请确保这个URI存在，并且可以处理文件系统请求。比如，将本地文件系统URI \"file:///\"修改成HDFS的URI:\"hdfs://\",或是namenode上的路径:hdfs://<hostname>:<port>.\n\n5. 点击“Enable”.\n\n\"javax.jdo.option.ConnectionURL\"配置可能是一个存储了元数据的MySQL数据库。Hive 元数据服务提供了到像MySQL这样的物理数据库的访问能力。MySQL存储了元数据。\n\n当配置好Hive插件后，你就可以查询Hive 表了。\n","postDate":"2018-01-01 02:03:35","postId":15,"type":"post","status":"publish","imported":false,"file":"drill-hive.md"}